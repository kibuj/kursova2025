import tkinter as tk
from tkinter import messagebox, simpledialog
from db import conn
from main import BankAccount


def run_ui():
    window = tk.Tk()
    window.title("üí∞ Bank Account Manager")
    window.geometry("500x400")
    window.configure(bg="#f0f0f0")

    account = None

    def create_account():
        nonlocal account
        name = simpledialog.askstring("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞", "–í–≤–µ–¥—ñ—Ç—å —ñ–º‚Äô—è –≤–ª–∞—Å–Ω–∏–∫–∞:")
        balance = simpledialog.askfloat("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞", "–í–≤–µ–¥—ñ—Ç—å –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å:")
        if name is not None and balance is not None:
            account = BankAccount(name, balance)
            messagebox.showinfo("‚úÖ –£—Å–ø—ñ—à–Ω–æ", f"–ê–∫–∞—É–Ω—Ç –¥–ª—è {name} —Å—Ç–≤–æ—Ä–µ–Ω–æ.")
        update_display()

    def deposit():
        if account:
            amount = simpledialog.askfloat("–ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è", "–°—É–º–∞ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è:")
            if amount:
                try:
                    account.deposit(amount)
                    update_display()
                except ValueError as e:
                    messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", str(e))

    def withdraw():
        if account:
            amount = simpledialog.askfloat("–ó–Ω—è—Ç—Ç—è", "–°—É–º–∞ –∑–Ω—è—Ç—Ç—è:")
            if amount:
                try:
                    account.withdraw(amount)
                    update_display()
                except ValueError as e:
                    messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", str(e))

    def save_account():
        if account:
            account.save_to_db(conn)
            messagebox.showinfo("‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ", f"–ê–∫–∞—É–Ω—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ (ID = {account.id})")

    def load_account():
        nonlocal account
        acc_id = simpledialog.askinteger("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è", "–í–≤–µ–¥—ñ—Ç—å ID —Ä–∞—Ö—É–Ω–∫—É:")
        if acc_id:
            acc = BankAccount.load_from_db(acc_id, conn)
            if acc:
                account = acc
                messagebox.showinfo("‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ", f"–ê–∫–∞—É–Ω—Ç –∑ ID {acc_id} –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.")
            else:
                messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", "–†–∞—Ö—É–Ω–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        update_display()

    def show_info_by_id():
        acc_id = simpledialog.askinteger("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø–æ ID", "–í–≤–µ–¥—ñ—Ç—å ID —Ä–∞—Ö—É–Ω–∫—É:")
        if acc_id:
            acc = BankAccount.load_from_db(acc_id, conn)
            if acc:
                info = (
                    f"ID: {acc.id}\n"
                    f"–í–ª–∞—Å–Ω–∏–∫: {acc._BankAccount__owner}\n"
                    f"–ë–∞–ª–∞–Ω—Å: {acc.get_balance()}\n"
                    f"–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:\n" + '\n'.join(acc.get_transaction_history())
                )
                messagebox.showinfo("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø–æ –∞–∫–∞—É–Ω—Ç—É", info)
            else:
                messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", f"–ê–∫–∞—É–Ω—Ç –∑ ID {acc_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

    def update_display():
        text_box.delete("1.0", tk.END)
        if account:
            text_box.insert(tk.END, f"–í–ª–∞—Å–Ω–∏–∫: {account._BankAccount__owner}\n")
            text_box.insert(tk.END, f"–ë–∞–ª–∞–Ω—Å: {account.get_balance():.2f}\n")
            text_box.insert(tk.END, "–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:\n")
            for t in account.get_transaction_history():
                text_box.insert(tk.END, f"- {t}\n")

    tk.Label(window, text="üí≥ –ë–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π –∞–∫–∞—É–Ω—Ç", font=("Arial", 16, "bold"), bg="#f0f0f0").pack(pady=10)

    btn_frame = tk.Frame(window, bg="#f0f0f0")
    btn_frame.pack(pady=5)

    tk.Button(btn_frame, text="–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç", width=20, command=create_account).grid(row=0, column=0, padx=5, pady=2)
    tk.Button(btn_frame, text="–ü–æ–ø–æ–≤–Ω–∏—Ç–∏", width=20, command=deposit).grid(row=0, column=1, padx=5, pady=2)
    tk.Button(btn_frame, text="–ó–Ω—è—Ç–∏", width=20, command=withdraw).grid(row=1, column=0, padx=5, pady=2)
    tk.Button(btn_frame, text="–ó–±–µ—Ä–µ–≥—Ç–∏", width=20, command=save_account).grid(row=1, column=1, padx=5, pady=2)
    tk.Button(btn_frame, text="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", width=20, command=load_account).grid(row=2, column=0, padx=5, pady=2)
    tk.Button(btn_frame, text="–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø–æ ID", width=20, command=show_info_by_id).grid(row=2, column=1, padx=5, pady=2)

    text_box = tk.Text(window, height=10, width=60, bg="#ffffff")
    text_box.pack(pady=10)

    window.mainloop()
    conn.close()

if __name__ == "__main__":
    run_ui()
