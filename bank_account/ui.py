import tkinter as tk
from tkinter import messagebox, simpledialog, PhotoImage
from db import conn
from main import BankAccount

def run_ui():
    window = tk.Tk()
    window.title("üí∞ Bank Account Manager")
    window.geometry("500x360")
    window.configure(bg="#e8f4f8")


    tk.Label(
        window,
        text="üí≥ –ë–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π –∞–∫–∞—É–Ω—Ç",
        font=("Helvetica", 18, "bold"),
        fg="#333333",
        bg="#e8f4f8"
    ).pack(pady=10)

    account = None

    def create_account():
        nonlocal account
        name = simpledialog.askstring("üë§ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞", "–í–≤–µ–¥—ñ—Ç—å —ñ–º‚Äô—è –≤–ª–∞—Å–Ω–∏–∫–∞:")
        balance = simpledialog.askfloat("üíµ –ü–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å", "–í–≤–µ–¥—ñ—Ç—å –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å:")
        if name is not None and balance is not None:
            account = BankAccount(name, balance)
            messagebox.showinfo("‚úÖ –£—Å–ø—ñ—à–Ω–æ", f"–ê–∫–∞—É–Ω—Ç –¥–ª—è {name} —Å—Ç–≤–æ—Ä–µ–Ω–æ üí≥.")
        update_display()

    def deposit():
        if account:
            amount = simpledialog.askfloat("‚ûï –ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è", "–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É:")
            if amount:
                try:
                    account.deposit(amount)
                    update_display()
                    messagebox.showinfo("‚úÖ –ì–æ—Ç–æ–≤–æ", f"–ù–∞ —Ä–∞—Ö—É–Ω–æ–∫ –∑–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ {amount:.2f} ‚Ç¥")
                except ValueError as e:
                    messagebox.showerror("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞", str(e))

    def withdraw():
        if account:
            amount = simpledialog.askfloat("‚ûñ –ó–Ω—è—Ç—Ç—è", "–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É:")
            if amount:
                try:
                    account.withdraw(amount)
                    update_display()
                    messagebox.showinfo("‚úÖ –ì–æ—Ç–æ–≤–æ", f"–ó —Ä–∞—Ö—É–Ω–∫—É –∑–Ω—è—Ç–æ {amount:.2f} ‚Ç¥")
                except ValueError as e:
                    messagebox.showerror("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞", str(e))

    def save_account():
        if account:
            account.save_to_db(conn)
            messagebox.showinfo("üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è", f"–ê–∫–∞—É–Ω—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ (ID: {account.id})")

    def load_account():
        nonlocal account
        acc_id = simpledialog.askinteger("üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", "–í–≤–µ–¥—ñ—Ç—å ID —Ä–∞—Ö—É–Ω–∫—É:")
        if acc_id:
            acc = BankAccount.load_from_db(acc_id, conn)
            if acc:
                account = acc
                messagebox.showinfo("‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ", f"–ê–∫–∞—É–Ω—Ç –∑ ID {acc_id} –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.")
            else:
                messagebox.showerror("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ", "–†–∞—Ö—É–Ω–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        update_display()

    def show_info_by_id():
        acc_id = simpledialog.askinteger("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏", "–í–≤–µ–¥—ñ—Ç—å ID —Ä–∞—Ö—É–Ω–∫—É:")
        if acc_id:
            acc = BankAccount.load_from_db(acc_id, conn)
            if acc:
                info = (
                    f"üìå ID: {acc.id}\n"
                    f"üë§ –í–ª–∞—Å–Ω–∏–∫: {acc._BankAccount__owner}\n"
                    f"üí∞ –ë–∞–ª–∞–Ω—Å: {acc.get_balance():.2f} ‚Ç¥\n"
                    f"üßæ –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:\n" + '\n'.join(acc.get_transaction_history())
                )
                messagebox.showinfo("üìã –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∞–∫–∞—É–Ω—Ç", info)
            else:
                messagebox.showerror("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ", f"–ê–∫–∞—É–Ω—Ç –∑ ID {acc_id} –Ω–µ —ñ—Å–Ω—É—î.")

    def update_display():
        text_box.delete("1.0", tk.END)
        if account:
            text_box.insert(tk.END, f"üë§ –í–ª–∞—Å–Ω–∏–∫: {account._BankAccount__owner}\n")
            text_box.insert(tk.END, f"üí∞ –ë–∞–ª–∞–Ω—Å: {account.get_balance():.2f} ‚Ç¥\n")
            text_box.insert(tk.END, "üßæ –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:\n")
            for t in account.get_transaction_history():
                text_box.insert(tk.END, f"‚Ä¢ {t}\n")

    btn_frame = tk.Frame(window, bg="#e8f4f8")
    btn_frame.pack(pady=10)

    def styled_button(text, row, column, command):
        tk.Button(
            btn_frame,
            text=text,
            width=20,
            bg="#4da6ff",
            fg="white",
            font=("Helvetica", 10, "bold"),
            command=command
        ).grid(row=row, column=column, padx=6, pady=6)

    styled_button("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç", 0, 0, create_account)
    styled_button("–ü–æ–ø–æ–≤–Ω–∏—Ç–∏", 0, 1, deposit)
    styled_button("–ó–Ω—è—Ç–∏", 1, 0, withdraw)
    styled_button("–ó–±–µ—Ä–µ–≥—Ç–∏", 1, 1, save_account)
    styled_button("–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏", 2, 0, load_account)
    styled_button("–Ü–Ω—Ñ–æ –ø–æ ID", 2, 1, show_info_by_id)

    text_box = tk.Text(window, height=10, width=70, bg="#ffffff", font=("Consolas", 10))
    text_box.pack(pady=10)

    window.mainloop()
    conn.close()

if __name__ == "__main__":
    run_ui()
