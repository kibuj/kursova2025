import tkinter as tk
from tkinter import messagebox
from main import Operation
from db import conn

from matplotlib.figure import Figure
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg

current_user = None

def create_user():
    global current_user
    name = name_entry.get()
    try:
        balance = int(balance_entry.get())
    except ValueError:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", "–ë–∞–ª–∞–Ω—Å –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º")
        return

    current_user = Operation(name, balance)
    current_user.save_to_db()
    update_output(f"üë§ –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {name}\nüí∞ –ë–∞–ª–∞–Ω—Å: {balance} ‚Ç¥\nüÜî ID: {current_user.id}")
    clear_graph()

def load_user():
    global current_user
    try:
        user_id = int(load_id_entry.get())
    except ValueError:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", "ID –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º")
        return

    user = Operation.load_from_db(user_id, conn)
    if user:
        current_user = user
        update_output(f"üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user.name}\nüí∞ –ë–∞–ª–∞–Ω—Å: {user.balance} ‚Ç¥\nüÜî ID: {user.id}")
        clear_graph()
    else:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID {user_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

def show_info():
    if not current_user:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", "–°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –∞–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        return
    update_output(
        f"üìÑ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞\n"
        f"üßæ {current_user.info()}\n"
        f"üí∞ –ë–∞–ª–∞–Ω—Å: {current_user.get_amount()} ‚Ç¥\n"
        f"üìä –ó–º—ñ–Ω–∏: {current_user.get_changes()}"
    )

def add_change():
    global current_user
    if not current_user:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", "–°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –∞–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        return
    try:
        change = int(change_entry.get())
    except ValueError:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", "–ó–º—ñ–Ω–∞ –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º")
        return

    current_user.add_change(change)
    current_user.save_to_db()
    update_output(f"‚ûï –î–æ–¥–∞–Ω–æ –∑–º—ñ–Ω—É: {change} ‚Ç¥\nüßæ {current_user.info()}")
    clear_graph()

def show_graph():
    if not current_user:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", "–°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –∞–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        return

    changes = current_user.get_changes()
    if not changes:
        messagebox.showinfo("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö", "–ù–µ–º–∞—î –∑–º—ñ–Ω –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≥—Ä–∞—Ñ—ñ–∫–∞")
        return

    balances = [current_user.balance - sum(changes)]
    for change in changes:
        balances.append(balances[-1] + change)

    graph_window = tk.Toplevel()
    graph_window.title(f"üìà –ì—Ä–∞—Ñ—ñ–∫ –∑–º—ñ–Ω ‚Äî {current_user.name}")
    graph_window.geometry("600x400")
    graph_window.configure(bg="#f0f0f0")

    fig = Figure(figsize=(6, 3.5), dpi=100)
    ax = fig.add_subplot(111)
    ax.plot(range(len(balances)), balances, marker='o', linestyle='-', color='royalblue')
    ax.set_title(f"üìä –ë–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {current_user.name}")
    ax.set_xlabel("–û–ø–µ—Ä–∞—Ü—ñ—è")
    ax.set_ylabel("–ë–∞–ª–∞–Ω—Å (‚Ç¥)")
    ax.grid(True)

    canvas = FigureCanvasTkAgg(fig, master=graph_window)
    canvas.draw()
    canvas.get_tk_widget().pack(padx=10, pady=10)


def clear_graph():
    for widget in graph_frame.winfo_children():
        widget.destroy()

def update_output(text):
    output_text.config(state="normal")
    output_text.delete("1.0", tk.END)
    output_text.insert(tk.END, text)
    output_text.config(state="disabled")

root = tk.Tk()
root.title("üíº –§—ñ–Ω–∞–Ω—Å–æ–≤–∏–π —Ç—Ä–µ–∫–µ—Ä")
root.geometry("500x720")
root.configure(bg="#e6f2ff")
root.resizable(False, False)

tk.Label(
    root, text="üí∞ –§—ñ–Ω–∞–Ω—Å–æ–≤–∏–π –¢—Ä–µ–∫–µ—Ä", font=("Helvetica", 16, "bold"),
    bg="#e6f2ff", fg="#333"
).pack(pady=10)

frame = tk.Frame(root, padx=15, pady=15, bg="#f9f9f9", relief="groove", bd=2)
frame.pack(fill="both", expand=True, padx=10, pady=10)

def add_labeled_entry(row, label_text):
    tk.Label(frame, text=label_text, bg="#f9f9f9", anchor="w").grid(row=row, column=0, sticky="w", pady=4)
    entry = tk.Entry(frame, width=30)
    entry.grid(row=row, column=1, pady=4)
    return entry

name_entry = add_labeled_entry(0, "–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:")
balance_entry = add_labeled_entry(1, "–ü–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å:")
load_id_entry = add_labeled_entry(3, "ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:")
change_entry = add_labeled_entry(5, "–ó–º—ñ–Ω–∞ (–¥–æ—Ö—ñ–¥/–≤–∏—Ç—Ä–∞—Ç–∞):")

def add_button(text, command, row, color):
    tk.Button(frame, text=text, command=command, bg=color, fg="black", width=35).grid(
        row=row, column=0, columnspan=2, pady=4
    )

add_button("‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞", create_user, 2, "#b3e6ff")
add_button("üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞", load_user, 4, "#d0f0c0")
add_button("üí∏ –î–æ–¥–∞—Ç–∏ –∑–º—ñ–Ω—É", add_change, 6, "#ffe680")
add_button("‚ÑπÔ∏è –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é", show_info, 7, "#ffb6c1")
add_button("üìà –ü–æ–±—É–¥—É–≤–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫", show_graph, 8, "#c3f2ff")

tk.Label(frame, text="üìã –í–∏–≤—ñ–¥:", bg="#f9f9f9", anchor="w").grid(row=9, column=0, sticky="w", pady=(10, 0))
output_text = tk.Text(frame, height=8, width=50, wrap="word", bg="#ffffff", font=("Consolas", 10))
output_text.grid(row=10, column=0, columnspan=2, pady=(5, 10))
output_text.config(state="disabled")

graph_frame = tk.Frame(frame, bg="#f9f9f9")
graph_frame.grid(row=11, column=0, columnspan=2, pady=10)

root.mainloop()
